on:
  push:
    tags:
      - "*"

permissions:
  contents: write
  packages: write

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            archive: tar.gz
    steps:
      - uses: actions/checkout@v2
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
          MINIFY: true
          STATIC_LINKING: false
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Get tag
        id: get_tag
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Get repository name
        id: get_repository_name
        run: echo ::set-output name=REPOSITORY_NAME::$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ steps.get_repository_name.outputs.REPOSITORY_NAME }}:${{ steps.get_tag.outputs.VERSION }}